import UIKit

var travelSummaryKm = 0
var filteredAllAboveAverage = [Int]()

// Countries and travel expenses
let netherlands = [
    "Netherlands": ["Tickets": 250, "Apartaments": 50, "Departure": 0, "Destination": 500]
]
let france = [
    "France": ["Tickets": 175, "Apartaments": 35, "Departure": 0, "Destination": 250]
]
let newYork = [
    "NewYork": ["Tickets": 333, "Apartaments": 450, "Departure": 0, "Destination": 3200]
]
let japan = [
    "Japan": ["Tickets": 250, "Apartaments": 50, "Departure": 0, "Destination": 2500]
]
let northKorea = [
    "northKorea": ["Tickets": 250, "Apartaments": 35, "Departure": 0, "Destination": 120]
]

// Attractions
let netherLandsAttractions = [
    "AmsterdamCanals": "Главной достопримечательностью Нидерландов в столице являются многочисленные водные каналы Амстердама — всего их здесь более сотни",
    "RedLights": "Квартал Красных фонарей — C наступлением тёмного времени суток его улицы озаряются порочными огнями, и около 900 работниц и работников постельного бизнеса выходят на охоту",
    "QubeHouses": "С виду эти яркие и необыкновенные домики выглядят как картинка. Каждый из домов состоит из нескольких этажей, первые из которых занимают магазины и офисные помещения. Внутренний интерьер таких домов не продумать не так-то просто — здесь практически нет прямых стен, поэтому для того, чтобы сотворить гармоничный дизайн, придётся изрядно поломать голову.",
    "GoghMuseum": "один из самых популярных и востребованных музеев в Нидерландах, и так же как и музей Мадам Тюссо, он обрёл мировую известность.",
    "Yordan": "Этот живописнейший район располагается в западной части города и вмещает в себя не только очаровательные цветные домики, но и престижные жилые комплексы, модные клубы и бары, а также широкие улицы и набережные каналов, располагающие к романтичным размеренным прогулкам."
]
let franceAttractions = [
    "EiffelTower": "Символом Парижа, как вы уже догадываетесь, стала главная достопримечательность Франции - Эйфелева башня — один из самых посещаемых и узнаваемых архитектурных объектов в мире.",
    "Louvre": "Бывшая крепость, некогда дворец, а теперь музей — все эти перевоплощения пережил на своём веку Лувр в Париже, ставший самым посещаемым музеем, куда ежегодно приезжают миллионы людей со всего мира. ",
    "DuneSaw": "Самая высокая дюна в Европе представляет собой огромную песчаную гору, которая постоянно перемещается и медленно растёт в высоту. ",
    "MontBlanc": "Шамони Монблан — долина в Альпах, ставшая культовым местом для занятий горнолыжным спортом. Старейший лыжный курорт, история которого насчитывает уже более 200 лет, стал важнейшей достопримечательностью Франции для любителей горных лыж. ",
    "Disneyland": "Этот гигантский комплекс развлечений, снискавший мировую известность, включает парки, отели, сказочные «страны» и целые жилые районы. По посещаемости Диснейлэнд превосходит все туристические объекты стран Старого Света."
]
let newYorkAttractions = [
    "StatueOfLiberty": "Самая знаменитая статуя мира является подарком Соединенным Штатам от французских властей.",
    "Manhattan": "Элитный округ, на котором находятся ключевые культурные и финансовые учреждения Нью-Йорка. Вы можете прогуляться по Центральному парку, Пятой Авеню или, допустим, Бродвею, зайти на Таймс-сквер или Уолл-Стрит.",
    "Central Park": "Огромная парковая зона, превращающая мегаполис из «бетонных джунглей» в прекрасный цветущий остров. Увидеть парк можно в огромном количестве фильмов и сериалов. ",
    "Times Square": "В список «главные достопримечательности Нью-Йорка» Таймс Сквер также включают благодаря огромным рекламным щитам, горящим неоном дни и ночи напролёт.",
    "Broadway": "Если вы хотите, чтобы посещение города стало для вас выдающимся событием, отправляйтесь на классическое или современное Бродвейское шоу."
]
let japanAttractions = [
    "Fusimi": "Одним из исторических символов Японии считается Храм Фусими-Инари или Святилище из тысячи алых ворот, посвященное богине рисового плодородия.",
    "GarbageIsland": "Футуристический город будущего расположен на острове Одайба в Токийской гавани. Это рай для пешеходов, город-праздник, светящийся тысячами огней. Почему остров получил название Мусорного? В 1979 году он был объединен с мусорной свалкой, что вовсе не помешало оригинальному месту развиваться стремительными темпами. ",
    "AsakusaDistrict": "Достопримечательности Японии уникальны и неповторимы. К ним относится район Асакуса в центральной части Токио с атмосферой старого города. Именно здесь японский колорит доминирует над урбанизацией огромного мегаполиса.",
    "TsukidzaMarket": "У туристов возникает вопрос «А что делать на рыбном рынке?». Действительно, рыбные рынки редко относят к достопримечательностям, а воспринимают как торговые точки, но только не рынок Цукидзи, расположенный в самом сердце Токио.",
    "Sagano": "Живописная бамбуковая роща из тысяч высоких вечнозеленых деревьев – визитная карточка префектуры Киото. Среди городской инфраструктуры удивительно видеть такое зеленое чудо. "
]
let northKoreaAttractions = [
    "Baitoushan": "Байтоушань или Чанбайша́нь — потенциально активный вулкан на границе КНДР и КНР.",
    "PanmonHall": "Павильон Фанмуна - это северокорейское здание, расположенное в северной части Пханмунджома, которое является зданием, соответствующим южнокорейскому зданию Freedom House.",
    "Samji": "Самджи - это озеро в Северной Корее. Озеро служит туристической достопримечательностью.",
    "RiSonggye": "Это вилла, расположенная в Sonamudong, Sapogu Station, Hamhung. Назначенная национальным сокровищем No 107 Северной Кореи, вилла была резиденцией И Сон Гэ до того, как он основал династию Чосон.",
    "PyongyangTvTower": "Пхенья́нская телеба́шня — телебашня в столице КНДР городе Пхеньяне. Расположена на территории парка Кэсон в округе Моранбон-гуйок, севернее стадиона имени Ким Ир Сена."
]


// Destinations
var destinaitionsArray = [[String: Int]]()

for (_, value) in netherlands {
    for (key, value) in value {
        if key == "Destination" {
            let destination = [key: value]
            destinaitionsArray.append(destination)
        }
    }
}
for (_, value) in france {
    for (key, value) in value {
        if key == "Destination" {
            let destination = [key: value]
            destinaitionsArray.append(destination)
        }
    }
}

for (_, value) in newYork {
    for (key, value) in value {
        if key == "Destination" {
            let destination = [key: value]
            destinaitionsArray.append(destination)
        }
    }
}

for (_, value) in japan {
    for (key, value) in value {
        if key == "Destination" {
            let destination = [key: value]
            destinaitionsArray.append(destination)
        }
    }
}

for (_, value) in northKorea {
    for (key, value) in value {
        if key == "Destination" {
            let destination = [key: value]
            destinaitionsArray.append(destination)
        }
    }
}
let average = travelSummaryKm / destinaitionsArray.count

// Travel Distance Summary

for destination in destinaitionsArray {
    travelSummaryKm += destination.reduce(0, { $0 + $1.value})
}

print("Общее количество пути в путешествии: \(travelSummaryKm)km")


// Задание со звёздочкой*
for destination in destinaitionsArray where (destination.values.first ?? 0) >= average {
    filteredAllAboveAverage.append(destination.values.first ?? 0)
}

print(filteredAllAboveAverage.map { String($0) }.joined(separator: ", "))


// All attraction names
var attractionNames = [String]()

for attraction in [netherLandsAttractions, franceAttractions, newYorkAttractions, japanAttractions, northKoreaAttractions] {
    attractionNames.append(contentsOf: attraction.keys)
}

attractionNames.sort()
print(attractionNames.joined(separator: ", "))

