import UIKit

// –û–±—â–∏–º —è–≤—è–ª–µ—Ç—Å—è –°—Ä–µ–¥—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è
// –ö–∞–∂–¥—ã–π –∫–µ–π—Å —ç—Ç–æ —Å—Ä–µ–¥—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è, –ø–æ–¥ —Ç–∏–ø
enum Vehicle {
    case car(model: VehicleModel, price: Int)
    case bike(model: String, price: Int)
    case subway(price: Int)
}

// CarsModels
class VehicleModel {
    private(set) var name: String
    private(set) var price: Int
    private(set) var maxSpeed: Int
    
    init(name: String, price: Int, maxSpeed: Int) {
        self.name = name
        self.price = price
        self.maxSpeed = maxSpeed
    }
    
    func drive() {
        print("Driving")
    }
    
    func stop() {
            print("Stopped driving")
        }
    
    func emote() {
        print("‚ú®")
    }
}
class FordMustang: VehicleModel {
    override func drive() {
        print("–§–æ—Ä–¥ –æ–±–º–∞–ª–¥–µ–Ω–Ω—ã–π! –ï–¥—É –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ \(self.maxSpeed) –∫–º –≤ —á–∞—Å!!!")
    }
    
    override func stop() {
        print("–§—É—Ö, —ç—Ç–æ –±—ã–ª–æ –∫—Ä—É—Ç–æ! –ü–æ–∂–∞–ª—É–π –ø—Ä–∏–ø–∞—Ä–∫—É—é—Å—å.")
    }
    
    override func emote() {
        print("üèéÔ∏è")
    }
}

class ToyotaCamryModel: VehicleModel {
    override func drive() {
        print("–ö–∞–º—Ä–∏ —Ç—Ä–∏ –∏ –ø—è—Ç—å –±—ã—Å—Ç—Ä–∞—è! –ï–¥—É –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ \(self.maxSpeed) –∫–º –≤ —á–∞—Å!!!")
    }
    
    override func stop() {
        print("–ú—É–∑—ã—á–∫—É –≤—ã—Ä—É–±–∞—é –∏ –≤—ã–ª—è–∑–∏—é.")
    }
    
    override func emote() {
        print("üöò")
    }
}

class ToyotaPriusModel: VehicleModel {
    override func drive() {
        print("–ü—Ä–∏—É—Å –µ—Å—Ç—å –ø—Ä–∏—É—Å —è —á—Ç–æ —Ç–∞–∫—Å–∏—Å—Ç! –ï–¥—É –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ \(self.maxSpeed) –∫–º –≤ —á–∞—Å!!!")
    }
    
    override func stop() {
        print("–í—Å–µ –º–∏—à—Ü–∏ –∑–∞—Ç–µ–∫–ª–∏, –ø–æ—Ä–∞ –ø–∞—Ä–∫–æ–≤–∞—Ç—å—Å—è –∏ –≤—ã–ª–∞–∑–∏—Ç—å.")
    }
    
    override func emote() {
        print("üöó")
    }
}

// CarPark
var mustangModel = FordMustang(name: "Ford Mustang", price: 85, maxSpeed: 220)
mustangModel.name
mustangModel.price
mustangModel.drive()
mustangModel.stop()
mustangModel.emote()
var camryModel = ToyotaCamryModel(name: "Toyota Camry", price: 45, maxSpeed: 160)
camryModel.name
camryModel.price
camryModel.drive()
camryModel.stop()
camryModel.emote()
var priusModel = ToyotaPriusModel(name: "Toyota Prius", price: 50, maxSpeed: 135)
priusModel.name
priusModel.price
priusModel.drive()
priusModel.stop()
priusModel.emote()
var mustang: Vehicle = .car(model: mustangModel, price: mustangModel.price)
var camry: Vehicle = .car(model: camryModel, price: camryModel.price)


// –û–±—â–∏–º —è–≤—è–ª–µ—Ç—å—Å—è –ó–∞—Ç—Ä–∞—Ç–∞
// –ö–∞–∂–¥—ã–π –∫–µ–π—Å —ç—Ç–æ –≤–∏–¥ –∑–∞—Ç—Ä–∞—Ç—ã, –ø–æ–¥ —Ç–∏–ø
enum Expenses {
    case flightTickets(amount: Int)
    case car(amount: Int)
    case food(amount: Double)
    case apartaments(amount: Double)
}

// Food Model
struct Food {
   private(set) var name: String
   private(set) var price: Double
   private(set) var isTasty: Bool
    
    func describeFood() {
        print("–ü—Ä–æ–±—É–µ–º \(self.name) –ø–æ –≤–∫—É—Å—É - \(isTasty ? "–æ—á–µ–Ω—å –≤–∫—É—Å–Ω–æ" : "—Ç–∞–∫ —Å–µ–±–µ.." )")
    }
    
    mutating func changeTastyPreference(to option: Bool) {
        self.isTasty = option
    }
  
    func isItWorthThePrice(answer: Bool) {
        print("–Ø –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ 100% —á—Ç–æ \(name) \(answer ? "–æ–ø—Ä–∞–≤–¥–∞–ª —Å–≤–æ—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ \(price)$" : "–ù–µ –æ–ø—Ä–∞–≤–¥–∞–ª —Å–≤–æ—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ \(price)$")")
    }
}

var croissant = Food(name: "Croissant", price: 2.50, isTasty: true)
var chocolateBar = Food(name: "Chocolate Bar", price: 4.70, isTasty: false)
var fruitsBowl = Food(name: "Bowl with fruits", price: 14.99, isTasty: true)
croissant.describeFood()
chocolateBar.changeTastyPreference(to: true)
chocolateBar.isTasty
fruitsBowl.isItWorthThePrice(answer: true)

// –û–±—â–∏–º —è–≤—è–ª–µ—Ç—å—Å—è –ú–µ—Å—Ç–æ
// –ö–∞–∂–¥—ã–π –∫–µ–π—Å —ç—Ç–æ —Ç–∏–ø –º–µ—Å—Ç–∞, –ø–æ–¥ —Ç–∏–ø
enum Place{
    case country(model: CountryModel)
    case place(model: PlaceModel)
}


// Country Model
struct CountryModel {
    var name: String
    var ticketPrice: Int
    var apartamentsPrice: Int
    
    func shortCountryReview(itWas: String) {
        print("–°—Ç—Ä–∞–Ω–∞ \(name) - \(itWas)")
    }
    
    func shortFlightReview(itWas: String) {
        print("–ü–µ—Ä–µ–ª—ë—Ç –≤—ã–¥–∞–ª—Å—è - \(itWas)")
    }
    
    func shortApartamentsReview(theyAre: String) {
        print("–Ø —Å–¥–µ–ª–∞–ª –Ω–µ–±–æ–ª—å—à—É—é —Ä–µ–≤–∏–∑–∏—é –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –∏ –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –æ–Ω–∏ - \(theyAre)")
    }
}
// Place Model
struct PlaceModel {
    var name: String
    var ticketPrice: Int
    var apartamentsPrice: Int
    
    func shortCountryReview(itWas: String) {
        print("\(name) —ç—Ç–æ –º–µ—Å—Ç–æ - \(itWas)")
    }
    
    func shortFlightReview(itWas: String) {
        print("–ü–µ—Ä–µ–ª—ë—Ç –≤—ã–¥–∞–ª—Å—è - \(itWas)")
    }
    
    func shortApartamentsReview(theyAre: String) {
        print("–Ø —Å–¥–µ–ª–∞–ª –Ω–µ–±–æ–ª—å—à—É—é —Ä–µ–≤–∏–∑–∏—é –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –∏ –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –æ–Ω–∏ - \(theyAre)")
    }
}

var netherlandsModel = CountryModel(name: "Netherlands", ticketPrice: 150, apartamentsPrice: 30)
var campingInTheForestModel = PlaceModel(name: "Camping in the forest", ticketPrice: 25, apartamentsPrice: 15)

let netherlands: Place = .country(model: netherlandsModel)
let camping: Place = .place(model: campingInTheForestModel)

// ExpensesManager
class ExpensesManager {
    var tickets = [Int]()
    var apartaments = [Int]()
    var vehicle = [Int]()
    var picturesTaken = [Int]()
    var otherExpenses = [Double]()
    
    func sumOfTickets() -> Int {
        tickets.reduce(0, +)
    }
    
    func sumOfApartaments() -> Int {
        apartaments.reduce(0, +)
    }
    
    func sumUpExpenses(tickets: Int, apartaments: Int, vehicle: Int, other: Double, currency: String) -> (Double, String) {
        var finalAmount = 0.0
        var finalCurrency = ""
        if currency == "USD" {
            finalAmount = Double(tickets + apartaments + vehicle) + other
            finalCurrency = "$"
        } else if currency == "EUR" {
            finalAmount = (Double(tickets + apartaments + vehicle) + other) * 0.86
            finalCurrency = "‚Ç¨"
        }
        return (finalAmount, finalCurrency)
    }
}

// Story Manager
class StoryManager {
     lazy private(set) var randomEmojies: Character = {
        var randInt = Int.random(in: 1...7)
         switch randInt {
         case 1: return "üåΩ"
         case 2: return "üêÆ"
         case 3: return "‚ö°Ô∏è"
         case 4: return "üßñüèΩ‚Äç‚ôÄÔ∏è"
         case 5: return "üçû"
         case 6: return "üìñ"
         case 7: return "üïí"
         default: return "üíΩ"
         }
    }()
    private var goodEmotion = "üëç"
    private var badEmotion = "üëé"
    
    static func tellStory(country: CountryModel, vehicle: VehicleModel, message: (CountryModel, VehicleModel) -> (String)) {
        let story = message(country, vehicle)
        print(story)
    }
    
    func emoteBad() -> String {
        badEmotion
    }
    
    func emoteGood() -> String {
        goodEmotion
    }
    
    func showRandomThought() {
        print(randomEmojies)
    }
}
let storyManager = StoryManager()

StoryManager.tellStory(country: netherlandsModel, vehicle: camryModel) { netherlands, vehicle in
    """
        –ø–µ—Ä–µ–ª—ë—Ç –≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É –º–Ω–µ –≤—ã–π–¥–µ—Ç \(netherlands.ticketPrice)$ \(storyManager.emoteBad())
        –∫–∞–∫ –∂–µ –Ω–µ —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–∫—É –≤ —Å—Ç–æ—Ä–∏—Å –±–∏–ª–µ—Ç–æ–≤ –Ω–∞ —Ñ–æ–Ω–µ –∞–µ—Ä–æ–ø–æ—Ä—Ç–∞
        –î–∞–ª–µ–µ –Ø —É–∂–µ –∑–∞—é—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª –æ—Ç–ª–∏—á–Ω—É—é –∏ —É—é–Ω—É—é—Ç –∫–≤–∞—Ä—Ç–∏—Ä–∫—É –Ω–∞ air b&b –Ω–∞ 7 –¥–Ω–µ–π
        –ü—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —ç—Ç–æ—Ç –∫–∞–º–∏–Ω!!!!\(storyManager.emoteGood())
        –Ø —Å–ª—ã—à–∞–ª, —á—Ç–æ –≤—Å—é –≥–æ–ª–∞–Ω–¥–∏—é –º–æ–∂–Ω–æ –æ–±—å–µ–∑–¥–∏—Ç—å –∑–∞ –Ω–µ–¥–µ–ª—é, –∏ –¥–ª—è —ç—Ç–æ–≥–æ —è —Å–Ω–∏–º—É –ø—Ä–æ—Å—Ç–µ–Ω—å–∫—É—é –º–∞—à–∏–Ω–∫—É \(vehicle.name) –Ω–∞ –Ω–µ–¥–µ–ª—é –∑–∞ \(vehicle.price * 7)$ –Ω–∞ 7 –¥–Ω–µ–π
        –£ –Ω–∞—Å –±—É–¥–µ—Ç –≤—Ä–µ–º—è —Å–¥–µ–ª–∞—Ç—å –µ—â–µ –ø–∞—Ä—É —Ñ–æ—Ç–æ—á–µ–∫
        –ú–Ω–µ –≤ –≥–æ–ª–æ–≤—É –ø—Ä–∏—à–ª–∞ —Å—Ç—Ä–∞–Ω–Ω–∞—è –º—ã—Å–ª—å - \(storyManager.randomEmojies), –∑–∞–∫–æ–Ω—Å–ø–µ–∫—Ç–∏—Ä—É—é –∫–∞ –µ—ë..
        """
}

