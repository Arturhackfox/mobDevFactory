import UIKit

typealias Emoji = Character
typealias CarModel = (model: String, isAvailable: Bool?, carPrice: Int)
typealias LocalVehiecle = (carOption: CarModel?, byLegs: Bool)

// CarPark
let camry: CarModel = ("Toyota Camry", false, 45)
let passat: CarModel = ("Volkswagen Passat", true, 35)
let prius: CarModel = ("Toyota Prius ", true, 50)
let mustang: CarModel? = ("Ford Mustang", true, 85)

// Countries and travel expenses
let netherlandsDict = [
    "Netherlands": ["Tickets": 250, "Apartaments": 50, "Departure": 0, "Destination": 500]
]
let franceDict = [
    "France" : ["Tickets": 175, "Apartaments": 35, "Departure": 0, "Destination": 250]
]
let newYorkDict = [
    "NewYork" : ["Tickets": 333, "Apartaments": 450, "Departure": 0, "Destination": 3200]
]
let japanDict = [
    "Japan" : ["Tickets": 250, "Apartaments": 50, "Departure": 0, "Destination": 2500]
]
let northKoreaDict = [
    "northKorea" : ["Tickets": 250, "Apartaments": 35, "Departure": 0, "Destination": 120]
]

// Destinations
var destinaitionsArray = [[String: Int]]()

for (_, value) in netherlandsDict {
    for (key, value) in value {
        if key == "Destination" {
            let destination = [key: value]
            destinaitionsArray.append(destination)
        }
    }
}

for (_, value) in franceDict {
    for (key, value) in value {
        if key == "Destination" {
            let destination = [key: value]
            destinaitionsArray.append(destination)
        }
    }
}

for (_, value) in newYorkDict {
    for (key, value) in value {
        if key == "Destination" {
            let destination = [key: value]
            destinaitionsArray.append(destination)
        }
    }
}

for (_, value) in japanDict {
    for (key, value) in value {
        if key == "Destination" {
            let destination = [key: value]
            destinaitionsArray.append(destination)
        }
    }
}

for (_, value) in northKoreaDict {
    for (key, value) in value {
        if key == "Destination" {
            let destination = [key: value]
            destinaitionsArray.append(destination)
        }
    }
}



// Travel Distance Summary
var travelSummaryKm = 0
for i in destinaitionsArray {
   travelSummaryKm += i.reduce(0, { $0 + $1.value})
     }

print("Общее количество пути в путешествии: \(travelSummaryKm)km")


// Задание со звёздочкой*
var filteredAllAboveAverage = [Int]()
print(filteredAllAboveAverage)
var average = travelSummaryKm / 2
print("destination array - \(destinaitionsArray)")

for i in destinaitionsArray {
    for (_, currentValue) in i {
        if currentValue > average {
            filteredAllAboveAverage.append(currentValue)
        }
    }
}
print(average)
print(filteredAllAboveAverage)

// Attractions
let netherLandsAttractions = [
    "AmsterdamCanals": "Главной достопримечательностью Нидерландов в столице являются многочисленные водные каналы Амстердама — всего их здесь более сотни",
    "RedLights": "Квартал Красных фонарей — C наступлением тёмного времени суток его улицы озаряются порочными огнями, и около 900 работниц и работников постельного бизнеса выходят на охоту",
    "QubeHouses": "С виду эти яркие и необыкновенные домики выглядят как картинка. Каждый из домов состоит из нескольких этажей, первые из которых занимают магазины и офисные помещения. Внутренний интерьер таких домов не продумать не так-то просто — здесь практически нет прямых стен, поэтому для того, чтобы сотворить гармоничный дизайн, придётся изрядно поломать голову.",
    "GoghMuseum": "один из самых популярных и востребованных музеев в Нидерландах, и так же как и музей Мадам Тюссо, он обрёл мировую известность.",
    "Yordan": "Этот живописнейший район располагается в западной части города и вмещает в себя не только очаровательные цветные домики, но и престижные жилые комплексы, модные клубы и бары, а также широкие улицы и набережные каналов, располагающие к романтичным размеренным прогулкам."
]
let franceAttractions = [
    "EiffelTower": "Символом Парижа, как вы уже догадываетесь, стала главная достопримечательность Франции - Эйфелева башня — один из самых посещаемых и узнаваемых архитектурных объектов в мире.",
    "Louvre": "Бывшая крепость, некогда дворец, а теперь музей — все эти перевоплощения пережил на своём веку Лувр в Париже, ставший самым посещаемым музеем, куда ежегодно приезжают миллионы людей со всего мира. ",
    "DuneSaw": "Самая высокая дюна в Европе представляет собой огромную песчаную гору, которая постоянно перемещается и медленно растёт в высоту. ",
    "MontBlanc": "Шамони Монблан — долина в Альпах, ставшая культовым местом для занятий горнолыжным спортом. Старейший лыжный курорт, история которого насчитывает уже более 200 лет, стал важнейшей достопримечательностью Франции для любителей горных лыж. ",
    "Disneyland": "Этот гигантский комплекс развлечений, снискавший мировую известность, включает парки, отели, сказочные «страны» и целые жилые районы. По посещаемости Диснейлэнд превосходит все туристические объекты стран Старого Света."
]
let newYorkAttractions = [
    "StatueOfLiberty": "Самая знаменитая статуя мира является подарком Соединенным Штатам от французских властей.",
    "Manhattan": "Элитный округ, на котором находятся ключевые культурные и финансовые учреждения Нью-Йорка. Вы можете прогуляться по Центральному парку, Пятой Авеню или, допустим, Бродвею, зайти на Таймс-сквер или Уолл-Стрит.",
    "Central Park": "Огромная парковая зона, превращающая мегаполис из «бетонных джунглей» в прекрасный цветущий остров. Увидеть парк можно в огромном количестве фильмов и сериалов. ",
    "Times Square": "В список «главные достопримечательности Нью-Йорка» Таймс Сквер также включают благодаря огромным рекламным щитам, горящим неоном дни и ночи напролёт.",
    "Broadway": "Если вы хотите, чтобы посещение города стало для вас выдающимся событием, отправляйтесь на классическое или современное Бродвейское шоу."
]
let japanAttractions = [
    "Fusimi": "Одним из исторических символов Японии считается Храм Фусими-Инари или Святилище из тысячи алых ворот, посвященное богине рисового плодородия.",
    "GarbageIsland": "Футуристический город будущего расположен на острове Одайба в Токийской гавани. Это рай для пешеходов, город-праздник, светящийся тысячами огней. Почему остров получил название Мусорного? В 1979 году он был объединен с мусорной свалкой, что вовсе не помешало оригинальному месту развиваться стремительными темпами. ",
    "AsakusaDistrict": "Достопримечательности Японии уникальны и неповторимы. К ним относится район Асакуса в центральной части Токио с атмосферой старого города. Именно здесь японский колорит доминирует над урбанизацией огромного мегаполиса.",
    "TsukidzaMarket": "У туристов возникает вопрос «А что делать на рыбном рынке?». Действительно, рыбные рынки редко относят к достопримечательностям, а воспринимают как торговые точки, но только не рынок Цукидзи, расположенный в самом сердце Токио.",
    "Sagano": "Живописная бамбуковая роща из тысяч высоких вечнозеленых деревьев – визитная карточка префектуры Киото. Среди городской инфраструктуры удивительно видеть такое зеленое чудо. "
]
let northKoreaAttractions = [
    "Baitoushan": "Байтоушань или Чанбайша́нь — потенциально активный вулкан на границе КНДР и КНР.",
    "PanmonHall": "Павильон Фанмуна - это северокорейское здание, расположенное в северной части Пханмунджома, которое является зданием, соответствующим южнокорейскому зданию Freedom House.",
    "Samji": "Самджи - это озеро в Северной Корее. Озеро служит туристической достопримечательностью.",
    "RiSonggye": "Это вилла, расположенная в Sonamudong, Sapogu Station, Hamhung. Назначенная национальным сокровищем No 107 Северной Кореи, вилла была резиденцией И Сон Гэ до того, как он основал династию Чосон.",
    "PyongyangTvTower": "Пхенья́нская телеба́шня — телебашня в столице КНДР городе Пхеньяне. Расположена на территории парка Кэсон в округе Моранбон-гуйок, севернее стадиона имени Ким Ир Сена."
]

// All attraction names
var attractionNames = [String]()

for i in netherLandsAttractions {
    attractionNames.append(i.key)
}
for i in franceAttractions {
    attractionNames.append(i.key)
}
for i in newYorkAttractions {
    attractionNames.append(i.key)
}
for i in japanAttractions {
    attractionNames.append(i.key)
}
for i in northKoreaAttractions {
    attractionNames.append(i.key)
}
attractionNames.sort()
print(attractionNames.joined(separator: ", "))

// Countries local vehiecles
let netherlandsCountry: LocalVehiecle = (camry.isAvailable ?? false ? camry : passat, false)
let franceCountry: LocalVehiecle = (mustang, false)
let newYorkCountry: LocalVehiecle = (prius, false)
let japanCountry: LocalVehiecle = (nil, true)
let northKoreaCountry: LocalVehiecle = (nil, true)

// Emojies
let croissant: Emoji = "🥐"
let excitedMood: Emoji = "🤠"
let taxi: Emoji = "🚕"

// Snack expenses
let croissantPrice = 2
let chocolateBar = 2.50
let cola = 4

var ticketsArray = [Int]()
var apartamentsArray = [Int]()
var vehicleArray = [Int]()
var picturesTakenArray = [Int]()
var totaleOthersArray = [Double]()

// Total expanses
var totalTickets = 0
var totalApartaments = 0
var totalVehicleExpanses = 0
var totalPictureTaken = 0
var totalOther: Double = 0
var summary = 0.0

print("Привет дружище! Сегодня Я решил уехать с Польши в долгожданное путешествие!\(excitedMood)")
print("По списку первой страной будет - \(netherlandsDict.keys.first ?? "No info")")
print("Давай сделаем фото моих чемаданов")
picturesTakenArray.append(1)

print("""
перелёт в одну сторону мне выйдет \(netherlandsDict["Netherlands"]?["Tickets"] ?? 0)$
как же не сделать фотку в сторис билетов на фоне аеропорта
Далее Я уже заюронировал отличную и уюнуют квартирку на air b&b на 7 дней
Просто посмотри на этот камин!!!!
Я слышал, что всю голандию можно обьездить за неделю, и для этого я сниму простенькую машинку \(netherlandsCountry.carOption?.model ?? camry.model) на неделю за \((netherlandsCountry.carOption?.carPrice ?? 0) * 7)$ на 7 дней
У нас будет время сделать еще пару фоточек
""")
apartamentsArray.append((netherlandsDict["Netherlands"]?["Apartaments"] ?? 0) * 7)
picturesTakenArray.append(6)
ticketsArray.append(netherlandsDict["Netherlands"]?["Tickets"] ?? 0)
vehicleArray.append((netherlandsCountry.carOption?.carPrice ?? 0) * 7)
print(vehicleArray)

print("самое время посетить вторую на списке страну - \(franceDict.keys.first ?? "No info")")
print("билеты удалось словить на скидке за \(franceDict["France"]?["Tickets"] ?? 0)$ .")
ticketsArray.append(franceDict["France"]?["Tickets"] ?? 0)
if  let car = franceCountry.carOption {
        print("Я буду примерно 2 дня, поэтому снял укромное местечко у Ейфелевой Башни с машиной \(car.model) \(car.model == "Ford Mustang" ? "без крыши" : "")")
        
        totalApartaments += franceDict["France"]?["Apartaments"] ?? 0
        totalVehicleExpanses += (car.carPrice * 2)
} else {
    print("Я буду примерно 2 дня, поэтому снял укромное местечко у Ейфелевой Башни, держи пару фоток)")
    totalApartaments += franceDict["France"]?["Apartaments"] ?? 0
    totalPictureTaken += 2
}
print("Здесь без круасана \(croissant) никак, купим и еду в Аеропорт")
totaleOthersArray.append(Double(croissantPrice))
ticketsArray.append(franceDict["France"]?["Tickets"] ?? 0)
picturesTakenArray.append(1)

print("И вот долгожданый \(newYorkDict.keys.first ?? "No info")!, и здесь я беру самую видовую квартирку на air b&b за целых \(newYorkDict["NewYork"]?["Apartaments"] ?? 0)$ в сутки!")
print("Воспользуюсь платным баром и возьму колу с шоколадкой")
print("Благо я здесь буду 1 день, поэтому отдохнуть решил на полную!)")
apartamentsArray.append(newYorkDict["NewYork"]?["Apartaments"] ?? 0)
picturesTakenArray.append(2)
totaleOthersArray.append((chocolateBar + Double(cola)))

if let car = newYorkCountry.carOption {
    print("А вот и такси \(taxi)!")
    vehicleArray.append(100)
} else {
    print("Здесь такие пробки \(taxi), что лучше я воспользую метро")
    vehicleArray.append(10)
    picturesTakenArray.append(1)
}

print("Сразу после \(newYorkDict.keys.first ?? "No info")'a я сразу же направлюсь в \(japanDict.keys.first ?? "No info")")
print("Дай Бог мне одобрят визу!")
print("Квартиру возьму на 3 дня, без авто")
ticketsArray.append(japanDict["Japan"]?["Tickets"] ?? 0)
apartamentsArray.append((japanDict["Japan"]?["Apartaments"] ?? 0) * 3)
picturesTakenArray.append(1)

print("В крайнем случае я направлюсь в \(northKoreaDict.keys.first ?? "No info")")
print("и крайний день я проведу здесь")
ticketsArray.append(northKoreaDict["northKorea"]?["Tickets"] ?? 0)
apartamentsArray.append(northKoreaDict["northKorea"]?["Apartaments"] ?? 0)
totalTickets = ticketsArray.reduce(0, { $0 + $1})
totalApartaments = apartamentsArray.reduce(0, { $0 + $1})
totalPictureTaken = picturesTakenArray.reduce(0, { $0 + $1})
totalOther = totaleOthersArray.reduce(0, { $0 + $1})
totalVehicleExpanses = vehicleArray.reduce(0, { $0 + $1})
summary = Double(totalTickets) + Double(totalApartaments) + Double(totalVehicleExpanses) + totalOther

print("""
      Как итог всё путешествие мне обошлось в \(summary)$
      На билеты у мень ушло порядка \(totalTickets)$
      На съём жилья ещё + \(totalApartaments)$
      А вот на аренду автомобилей - \(totalVehicleExpanses)$
      Меньше всего заняли расстраты на спонтанные снэки - \(totalOther)$
      и я успел сделать \(totalPictureTaken) фоток!!
      """)



